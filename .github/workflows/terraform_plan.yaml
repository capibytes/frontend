name: "Terraform Plan"

on:
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
    
env:
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_CLOUD_ORGANIZATION: "capibytes"
  TF_WORKSPACE: "datalytics-backend"
  CONFIG_DIRECTORY: "./terraform"

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: upload config
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: tf-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      - name: plan run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: tf-plan
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.tf-upload.outputs.configuration_version_id }}
          plan_only: true

      - name: plan output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
        id: tf-output
        with:
          plan: ${{ fromJSON(steps.tf-plan.outputs.payload).data.relationships.plan.data.id }}

      - name: update pr
        uses: actions/github-script@v6
        id: tf-comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Recupera o comentario ja existente para o pull request
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Terraform Cloud Plan Output')
            });
            const output = `#### Terraform Cloud Plan Output
               \`\`\`
               Plano: adicionar ${{ steps.tf-output.outputs.add }}, alterar ${{ steps.tf-output.outputs.change }}, destruir ${{ steps.tf-output.outputs.destroy }}.
               \`\`\`
               [Terraform Cloud Plan](${{ steps.tf-plan.outputs.run_link }})
               `;
            // 3. Deletar comentario anterior para o pull request fazer sentido
            if (botComment) {
              github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
              });
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });