name: Deploy frontend

on:
  push:
    branches:
      - deploy

permissions:
  id-token: write # Permissão para acessar AWS por OpenID
  contents: read

env:
  AWS_REGION: us-east-1
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_CLOUD_ORGANIZATION: "capibytes"
  TF_WORKSPACE: "datalytics-frontend"
  CONFIG_DIRECTORY: "./terraform"
  SRC_DIRECTORY: "src/datalytics"

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Define uma versão reduzida do hash do commit, que será usada para versionamento dos arquivos no bucket
      - name: SHA curto
        id: sha
        run: echo "::set-output name=short::$(git rev-parse --short HEAD)"

      # Build frontend web e deploy para o bucket
      - name: Instalar dependências
        working-directory: ${{ env.SRC_DIRECTORY }}
        run: flutter pub get

      - name: Build
        working-directory: ${{ env.SRC_DIRECTORY }}
        run: flutter build web

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Push para bucket
        working-directory: ${{ env.SRC_DIRECTORY }}/build/web
        run: |
          mkdir -p ${{ steps.sha.outputs.short }}
          shopt -s extglob dotglob
          mv !(${{ steps.sha.outputs.short }}) ${{ steps.sha.outputs.short }}/
          aws s3 sync . ${{ secrets.S3_URI }}

    outputs:
      sha_short: ${{ steps.sha.outputs.short }}

  terraform-apply:
    name: "terraform Apply"
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: read
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: config tfvars
        working-directory: ${{ env.CONFIG_DIRECTORY }}
        run: |
          echo "CLOUDFRONT_ORIGIN_PATH=\"/${{ needs.build-and-push.outputs.sha_short }}\"" > terraform.tfvars
          echo "" >> terraform.tfvars
  
      - name: upload config
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.4
        id: tf-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
      
      - name: apply run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.4
        id: tf-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.tf-upload.outputs.configuration_version_id }}

      - name: apply config
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.4
        if: fromJSON(steps.tf-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: tf-apply
        with:
          run: ${{ steps.tf-run.outputs.run_id }}
          comment: "Apply run from GitHub Actions @ ${{ github.sha }}"